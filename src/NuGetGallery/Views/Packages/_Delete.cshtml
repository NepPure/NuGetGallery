@model ManagePackageViewModel

<div class="page-delete-package">

    @if (Model.IsLocked && !User.IsAdministrator())
    {
        <div class="validation-error-message-list">
            @ViewHelpers.AlertDanger(
                    @<text>
                        <span>
                            Package '@Model.Id' has been locked. This means you cannot publish a new version or change the listing status of a published package version. Please contact
                            <a href="mailto:support@nuget.org?subject=@HttpUtility.UrlPathEncode(string.Format("Requesting support for a locked package - '{0}'", Model.Id))">support@nuget.org</a>.
                        </span>
                    </text>)
        </div>
    }
    else
    {
        if (Model.IsLocked && User.IsAdministrator())
        {
            <div class="validation-error-message-list">
                @ViewHelpers.AlertDanger(
                        @<text>
                            <span>Package '@Model.Id' has been locked.</span>
                        </text>)
            </div>
        }

        <label for="input-select-version" id="package-version-label">Select version</label>

        @Html.DropDownList("version-selection", Model.VersionSelectList,
                        new
                        {
                            @class = "form-control",
                            title = "Select a version",
                            id = "input-select-version"
                        })

        if (!Model.FailedValidation)
        {
            <b>
                List/unlist version
            </b>

            <div>

                @if (!User.IsAdministrator())
                {
                    @ViewHelpers.AlertInfo(
                        @<text>
                            You can control how your packages are listed using the checkbox below. As per <a href="https://docs.microsoft.com/en-us/nuget/policies/deleting-packages">policy</a>, permanent deletion is not supported as it would break every project depending on the availability of the package. For more assistance, <a href="@Url.ReportAbuse(Model.Id, Model.Version)" title="Contact Support">Contact Support</a>.
                        </text>
                            )
                }

                @using (Html.BeginForm("UpdateListed", "Packages"))
                {
                    @Html.AntiForgeryToken()
                    @Html.Hidden("version", @Model.Version)
                    <div class="form-group @Html.HasErrorFor(package => package.Listed)">
                        @Html.ShowCheckboxFor(package => package.Listed)
                        @Html.ShowLabelFor(package => package.Listed, "List " + Model.Id + " " + Model.Version + " in search results.")
                        @Html.ShowValidationMessagesFor(package => package.Listed)

                        <p>Unlisted packages cannot be installed directly and do not show up in search results.</p>
                    </div>

                    <div class="form-group">
                        <input type="submit" class="btn btn-primary form-control" value="Save" />
                    </div>
                }
            </div>
        }
    }

    @if (User.IsAdministrator())
    {
        <b>
            Delete version
        </b>

        <div class="list-unstyled">
            @ViewHelpers.AlertDanger(
                            @<text>
                                <strong>Deleting this package will make it unavailable for download and package restore.</strong><br />
                                This package version has been downloaded @Model.DownloadCount times (@Model.TotalDownloadCount downloads in total).
                                Deleting it may break a large number of development teams.
                                If the package should be removed from search results but still be available for restore, consider unlisting the package instead.
                            </text>)

            @using (Html.BeginForm("Delete", "Packages", FormMethod.Post, new { id = "delete-form" }))
            {
                foreach (var p in Model.DeletePackagesRequest.Packages)
                {
                    <input type="hidden" name="Packages[]" value="@p" />
                }

                @Html.Partial("_DeletePackage", Model.DeletePackagesRequest)
            }
        </div>
    }
</div>